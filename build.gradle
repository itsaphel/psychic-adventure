plugins {
    id 'java'
    id 'maven'
    id 'signing'
}

import org.apache.tools.ant.filters.ReplaceTokens

group 'io.indices'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

defaultTasks 'clean', 'build'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url 'https://oss.sonatype.org/content/groups/public/' }
    maven { url 'https://nexus.indices.io/content/groups/public/' }
    maven { url 'http://repo.onarandombox.com/content/groups/public/' }
    maven { url 'http://repo.dmulloy2.net/content/groups/public/' }
    maven { url "http://repo.inventivetalent.org/content/repositories/snapshots/" }
}

dependencies {
    compile group: 'net.kyori', name: 'text', version: '1.12-SNAPSHOT', changing: true

    testCompile group: 'junit', name: 'junit', version: '4.12'

    compileOnly group: 'org.spigotmc', name: 'spigot-api', version: '1.12-R0.1-SNAPSHOT'
    compileOnly group: 'com.voxelgameslib', name: 'voxelgameslib', version: '2.0-SNAPSHOT', changing: true
    compileOnly group: 'com.comphenix.protocol', name: 'ProtocolLib', version: '4.2.1'
}

processResources {
    filter ReplaceTokens, tokens: [
            'version': project.version
    ]
}


task copyToServer(dependsOn: 'jar', type: Copy) {
    from 'build/libs/psychic-adventure-' + project.version + '.jar'
    into '../testserver/plugins/'
}

task javadocJar(type: Jar) {
    classifier 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

if (!project.hasProperty("dev")) {
    artifacts {
        archives javadocJar
        archives sourcesJar
    }
}

signing {
    required {
        !project.version.endsWith('-SNAPSHOT') && gradle.taskGraph.hasTask('uploadArchives')
    }
    sign configurations.archives
}

if (project.hasProperty('indicesUsername') && project.hasProperty('indicesPassword')) {
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: 'https://nexus.indices.io/content/repositories/releases/') {
                    authentication(userName: indicesUsername, password: indicesPassword)
                }

                snapshotRepository(url: 'https://nexus.indices.io/content/repositories/snapshots/') {
                    authentication(userName: indicesUsername, password: indicesPassword)
                }

                pom.project {
                    name project.name

                    issueManagement {
                        system 'GitHub Issues'
                        url 'https://github.com/itsaphel/psychic-adventure/issues'
                    }

                    scm {
                        connection 'scm:git@github.com:itsaphel/psychic-adventure.git'
                        developerConnection 'scm:git@github.com:itsaphel/psychic-adventure.git'
                        url 'https://github.com/itsaphel/psychic-adventure/'
                    }
                }
            }
        }
    }
}

configurations.all {
    // Check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
